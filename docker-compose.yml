version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://postgres:password@db:5432/postgres"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  # This sibling dockerfile is used to spin up an isolated container for executing user Python code
  sibling:
    build:
      context: ./backend/docker_sibling
      dockerfile: Dockerfile
    image: python:3.11-slim-pandas-scipy
    entrypoint: /bin/true

volumes:
  db_data:
